"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var firebase_1 = require("firebase");
var advancedHooks = __importStar(require("./advancedHooks"));
var hooks = __importStar(require("./hooks"));
var provider = __importStar(require("./provider"));
var utils = __importStar(require("./utils"));
exports.deleteField = firebase_1.firestore.FieldValue.delete();
exports.convertStateToJson = provider.convertStateToJson;
exports.Provider = provider.default;
exports.Context = provider.Context;
exports.getHashCode = utils.getHashCode;
exports.createDataFromDoc = utils.createDataFromDoc;
exports.createDataFromCollection = utils.createDataFromCollection;
exports.getQueryId = utils.getQueryId;
exports.useLazyGetDocSnapshot = hooks.useLazyGetDocSnapshot;
exports.useGetDocSnapshot = hooks.useGetDocSnapshot;
exports.useSubscribeDocSnapshot = hooks.useSubscribeDocSnapshot;
exports.useLazyGetCollectionSnapshot = hooks.useLazyGetCollectionSnapshot;
exports.useGetCollectionSnapshot = hooks.useGetCollectionSnapshot;
exports.useSubscribeCollectionSnapshot = hooks.useSubscribeCollectionSnapshot;
exports.useLazyGetDoc = hooks.useLazyGetDoc;
exports.useGetDoc = hooks.useGetDoc;
exports.useSubscribeDoc = hooks.useSubscribeDoc;
exports.useLazyGetCollection = hooks.useLazyGetCollection;
exports.useGetCollection = hooks.useGetCollection;
exports.useSubscribeCollection = hooks.useSubscribeCollection;
exports.useArrayQuery = advancedHooks.useArrayQuery;
exports.useQuery = advancedHooks.useQuery;
exports.usePaginateCollection = advancedHooks.usePaginateCollection;
exports.useGetSubCollection = advancedHooks.useGetSubCollection;
exports.useSetDoc = hooks.useSetDoc;
exports.useAddDoc = hooks.useAddDoc;
exports.useUpdateDoc = hooks.useUpdateDoc;
